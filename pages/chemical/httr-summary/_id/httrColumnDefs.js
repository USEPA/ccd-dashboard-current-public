const genericValueGetter = value => (Number.isNaN(value) || value === '-' ? value : Number(value).toFixed(2));

const columnDefs = [
  {
    filter: false,
    suppressSizeToFit: true,
    headerCheckboxSelection: true,
    headerCheckboxSelectionFilteredOnly: true,
    checkboxSelection: true,
    sortable: false,
    resizable: false,
    width: 50,
  },
  {
    headerName: 'Cell Type',
    field: 'cellType',
    tooltipField: 'cellType',
    filter: 'agTextColumnFilter',
    minWidth: 100,
    width: 120,
  },
  {
    headerName: 'Signature',
    field: 'signature',
    tooltipField: 'signature',
    width: 150,
    filter: 'agTextColumnFilter',
    sortable: true,
    // cellStyle: {'white-space': 'normal', 'line-height': '20px'},
    autoHeight: true,
    wrapText: true,
  },
  {
    headerName: 'Target',
    field: 'superTarget',
    tooltipField: 'superTarget',
    minWidth: 80,
    width: 100,
    filter: 'agTextColumnFilter',
    sortable: true,
    cellStyle: {'white-space': 'normal', 'line-height': '20px'},
    autoHeight: true,
    hide: false,
  },
  {
    headerName: 'Target Class',
    field: 'targetClass',
    minWidth: 100,
    width: 120,
    sortable: true,
    autoHeight: true,
    hide: true,
  },
  {
    headerName: 'Target Level',
    field: 'superTargetLevel',
    minWidth: 100,
    width: 120,
    hide: true,
  },
  {
    headerName: 'Hit Call',
    field: 'hitCall',
    filter: 'agNumberColumnFilter',
    filterParams: {
      inRangeInclusive: true,
      defaultOption: 'greaterThanOrEqual',
      allowedCharPattern: '\\d\\.\\-',
    },
    valueGetter: 'Number.isNaN(data.hitCall) || data.hitCall === "-" ? "-" : Number( data.hitCall ).toFixed(2)',
    floatingFilterComponentParams: {suppressFilterButton: false},
    suppressMenu: true,
    minWidth: 70,
    width: 80,
  },
  {
    headerName: 'Top',
    field: 'top',
    valueGetter: 'Number.isNaN(data.top) || data.top === "-" ? "-" : Number( data.top ).toFixed(2)',
    floatingFilterComponentParams: {suppressFilterButton: false},
    filter: 'agNumberColumnFilter',
    filterParams: {
      inRangeInclusive: true,
      defaultOption: 'greaterThanOrEqual',
      allowedCharPattern: '\\d\\.\\-',
    },
    suppressMenu: true,
    minWidth: 50,
    width: 60,
    headerTooltip: 'Info : Maximum response achieved by the modeled CR curve',
  },
  {
    headerName: 'BMD',
    field: 'bmd',
    valueGetter: 'Number.isNaN(data.bmd) || data.bmd === "-" ? "-" : Number( data.bmd ).toFixed(2)',
    floatingFilterComponentParams: {suppressFilterButton: false},
    suppressMenu: true,
    minWidth: 50,
    width: 60,
    filter: 'agNumberColumnFilter',
    filterParams: {
      inRangeInclusive: true,
      defaultOption: 'greaterThanOrEqual',
      allowedCharPattern: '\\d\\.\\-',
    },
    // comparator: (num1, num2) => num1 - num2,
    hide: false,
  },
  {
    headerName: 'Top/Cutoff',
    field: 'topOverCutoff',
    valueGetter: 'Number.isNaN(data.topOverCutoff) || data.topOverCutoff === "-" ? "-" : Number( data.topOverCutoff ).toFixed(2)',
    floatingFilterComponentParams: {suppressFilterButton: false},
    filter: 'agNumberColumnFilter',
    filterParams: {
      inRangeInclusive: true,
      defaultOption: 'greaterThanOrEqual',
      allowedCharPattern: '\\d\\.\\-',
    },
    suppressMenu: true,
    cellRenderer: 'roundTo2',
    minWidth: 80,
    width: 100,
  },
  {
    headerName: 'QC',
    field: 'qc',
    sortable: true,
    minWidth: 50,
    width: 70,
    cellStyle: {'white-space': 'normal', 'line-height': '20px'},
    autoHeight: true,
    valueGetter: p => (!p.data.qc ? '-' : `${(p.data.qc === 'P') ? 'PASS' : 'FAIL'}`),
  },
  {
    headerName: 'QC Flag',
    field: 'qcFlag',
    sortable: true,
    minWidth: 80,
    width: 100,
    autoHeight: true,
    cellRenderer: 'QcFlagPopover',
  },
  {
    headerName: 'QC Details',
    field: 'qcPopover',
    suppressColumnsToolPanel: true,
    sortable: false,
    cellStyle: {'white-space': 'normal', 'line-height': '20px'},
    autoHeight: true,
    minWidth: 80,
    width: 100,
    hide: true,
  },
  {
    headerName: 'Details',
    minWidth: 50,
    width: 60,
    field: 'sampleId:',
    colId: 'detailsPopup',
    suppressMenu: true,
    filter: false,
    sortable: false,
    cellRenderer: 'detailsBtn',
  },
  {
    headerName: 'Plot',
    width: 50,
    filter: false,
    field: 'assayComponentEndpointName',
    colId: 'concRespPlot',
    suppressMenu: true,
    cellRenderer: 'repBtn',
    sortable: false,
  },
  {
    headerName: 'Description',
    minWidth: 80,
    width: 100,
    field: 'description',
    tooltipField: 'description',
    colId: 'description',
    suppressMenu: true,
    filter: 'agTextColumnFilter',
    hide: true,
  },
  {
    headerName: 'Fit method',
    field: 'fitMethod',
    floatingFilterComponentParams: {suppressFilterButton: false},
    filter: 'agTextColumnFilter',
    suppressMenu: true,
    minWidth: 100,
    width: 120,
    hide: true,
  },
  {
    headerName: 'Source',
    field: 'source',
    tooltipField: 'source',
    filter: 'agTextColumnFilter',
    minWidth: 80,
    width: 100,
  },
  {
    headerName: 'Subsource',
    field: 'subsource',
    filter: 'agTextColumnFilter',
    minWidth: 100,
    width: 120,
    hide: true,
  },
  {
    headerName: 'Direction',
    field: 'direction',
    tooltipField: 'direction',
    filter: 'agTextColumnFilter',
    minWidth: 80,
    width: 100,
  },
  {
    headerName: 'No. Genes',
    field: 'ngene',
    colId: 'ngene',
    filter: 'agNumberColumnFilter',
    minWidth: 100,
    width: 120,
    hide: true,
  },
  {
    headerName: 'Time (hrs)',
    field: 'time',
    colId: 'time',
    filter: 'agNumberColumnFilter',
    headerTooltip: 'Exposure time (hours)',
    tooltipField: 'time',
    minWidth: 80,
    width: 100,
    hide: false,
  },
  {
    headerName: 'Sample ID',
    field: 'sampleId',
    tooltipField: 'sampleId',
    suppressMenu: true,
    autoHeight: true,
    minWidth: 70,
    width: 90,
  },
  {
    headerName: 'Conc.',
    field: 'conc',
    tooltipField: 'conc',
    colId: 'concentration',
    suppressMenu: true,
    filter: 'agTextColumnFilter',
    minWidth: 100,
    width: 120,
    hide: true,
  },
  {
    headerName: 'Response',
    field: 'response',
    tooltipField: 'response',
    suppressMenu: true,
    minWidth: 100,
    width: 120,
    filter: 'agTextColumnFilter',
    hide: true,
  },
  {
    headerName: 'Profile',
    width: 130,
    colId: 'profile',
    cellStyle: {'white-space': 'normal', 'line-height': '20px'},
    wrapText: true,
    autoHeight: true,
    suppressMenu: true,
    hide: true,
  },
];

export default columnDefs;
